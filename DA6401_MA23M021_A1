This project implements a simple deep learning model for image classification. The goal is to build, train, and evaluate a neural network using a dataset, leveraging deep learning techniques such as convolutional layers, batch normalization, and dropout for improved performance.
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.datasets import fashion_mnist

(x_train, y_train), (_, _) = fashion_mnist.load_data()

class_labels = [
    "T-shirt/Top", "Trouser", "Pullover", "Dress", "Coat", 
    "Sandal", "Shirt", "Sneaker", "Bag", "Ankle Boot"
]

sample_images = []
for i in range(10):
    sample_images.append(x_train[np.where(y_train == i)][0])

fig, axes = plt.subplots(2, 5, figsize=(10, 5))
fig.suptitle("Fashion-MNIST Sample Images", fontsize=14)

for i, ax in enumerate(axes.flat):
    ax.imshow(sample_images[i], cmap='gray')
    ax.set_title(class_labels[i])
    ax.axis('off')

plt.tight_layout()
plt.show()
